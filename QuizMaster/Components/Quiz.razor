@using Microsoft.AspNetCore.Components.Web
@using QuizMaster.Models
@using QuizMaster.Services

@inject JsonFileQuestionService QuestionService
@{
	SetQuestion();
}
@if (!finished)
{
	<div class="quiz-div">
		<div class="quiz-header">
			<div class="question">@currentQuestion.Question</div>
			<div class="circle-container">
				@for (int i = questions.Length - 1; i >= 0; i--)
				{
					string c = "";
					if (i < answersIndices.Count)
					{
						if (answersIndices[i] == questions[i].AnswerIndex)
							c += "#4cd137";
						else
							c += "#e84118";
					}
					else c += "#353b48";
					<div class="circle" style="background-color:@c"></div>
				}
			</div>
		</div>
		<div class="answer-div">

			@for (int i = 0; i < currentQuestion.Answers.Length; i++)
			{
				string c = "answer-button";
				var currentIndex = i;
				if (answered)
				{
					if (currentIndex == selectedAnswer && currentIndex == currentQuestion.AnswerIndex) c += " correct";
					else if (currentIndex == currentQuestion.AnswerIndex) c += " correct";
					else if (currentIndex == selectedAnswer) c += " wrong";
					else c += " remove";
				}
				<button class=@c @onclick="(e=>Answer(currentIndex))">
					<span class="button-text">@currentQuestion.Answers[i]</span>
				</button>

			}

		</div>
		@if (!showHint)
		{
			<div class="hint-div">
				<span>Hint</span>
				<button class="dropdown-toggle" @onclick="e=>UseHint()"></button>
			</div>
		}
		else
		{
			<div class="hint-div activated">
				<span>Hint</span>
				<button class="dropdown-toggle" @onclick="e=>UseHint()"></button>
			</div>
		}
		@if (showHint)
		{
			<div class="hint">
				@currentQuestion.Hint
			</div>
		}
	</div>
	<div class="quiz-footer">
		<div class="quiz-footer-div">
			<p>
				Time left : 15s
				Contributor : @currentQuestion.Contributor
				Hints left : @hints
			</p>
			<button @onclick="Submit">Submit</button>
		</div>
	</div>
}
else
{
	<div class="quiz-div">
		<div class="quiz-header">
			<div class="question">You were able to do: @CorrectAnswers() Out of @questions.Length</div>
			<div class="circle-container">
				@for (int i = questions.Length - 1; i >= 0; i--)
				{
					string c = "";
					if (i < answersIndices.Count)
					{
						if (answersIndices[i] == questions[i].AnswerIndex)
							c += "#4cd137";
						else
							c += "#e84118";
					}
					else c += "#353b48";
					<div class="circle" style="background-color:@c"></div>
				}
			</div>
		</div>
	</div>
	<div class="quiz-footer">
		Refresh to do the test again.
	</div>
}

@code {
		int currentQuestionIndex = 0;
		QuestionModel[]? questions;
		QuestionModel? currentQuestion;
		List<int> answersIndices = new List<int>();
		int selectedAnswer = 0;
		bool answered = false;
		int hints = 3;
		bool showHint = false;
		bool finished;
		void SetQuestion()
		{
			questions = QuestionService.GetQuestions();
			currentQuestion = questions[currentQuestionIndex];
		}
		void Answer(int answerIndex)
		{
			if (answered) return;
			answered = true;
			answersIndices.Add(answerIndex);
			selectedAnswer = answerIndex;
		}
		void UseHint()
		{
			if (showHint || hints < 1)
				return;
			showHint = true;
			hints--;

		}
		void Submit()
		{
			if (!answered) return;
			answered = false;
			showHint = false;
			if (answersIndices.Count == questions.Length)
			{
				finished = true;
				return;
			}
			currentQuestionIndex++;
			SetQuestion();
		}
		int CorrectAnswers()
		{
			int sum = 0;
			for (int i = 0; i < answersIndices.Count; i++)
			{
				if (answersIndices[i] == questions[i].AnswerIndex)
					sum += 1;
			}
			return sum;
		}
}